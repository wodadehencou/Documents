<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0157)http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=/netahtml/srchnum.htm&r=1&f=G&l=50&s1=6263354.WKU.&OS=PN/6263354&RS=PN/6263354 -->
<HTML><HEAD><TITLE>United States Patent: 6,263,354</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META content="MSHTML 6.00.2800.1505" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff><A name=top></A>
<CENTER><IMG 
alt="[US Patent &amp; Trademark Office, Patent Full Text and Image Database]" 
src="United States Patent 6,263,354.files/patfthdr.gif"> <BR><!-- <IMG border=0 src=/netaicon/PTO/titlebar.gif><br> -->
<TABLE>
  <TBODY>
  <TR>
    <TD align=middle><A href="http://www.uspto.gov/patft/index.html"><IMG 
      alt=[Home] src="United States Patent 6,263,354.files/home.gif" border=0 
      valign="middle"></A> <A 
      href="http://patft.uspto.gov/netahtml/search-bool.html"><IMG 
      alt="[Boolean Search]" 
      src="United States Patent 6,263,354.files/boolean.gif" border=0 
      valign="middle"></A> <A 
      href="http://patft.uspto.gov/netahtml/search-adv.htm"><IMG 
      alt="[Manual Search]" 
      src="United States Patent 6,263,354.files/manual.gif" border=0 
      valign="middle"></A> <A 
      href="http://patft.uspto.gov/netahtml/srchnum.htm"><IMG 
      alt="[Number Search]" 
      src="United States Patent 6,263,354.files/number.gif" border=0 
      valign="middle"></A> <A 
      href="http://www.uspto.gov/patft/help/help.htm"><IMG alt=[Help] 
      src="United States Patent 6,263,354.files/help.gif" border=0 
      valign="middle"></A> </TD></TR>
  <TR>
    <TD align=middle><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&amp;Sect2=HITOFF&amp;d=PALL&amp;p=1&amp;u=/netahtml/srchnum.htm&amp;r=1&amp;f=G&amp;l=50&amp;s1=6263354.WKU.&amp;OS=PN/6263354&amp;RS=PN/6263354#bottom"><IMG 
      alt=[Bottom] src="United States Patent 6,263,354.files/bottom.gif" 
      border=0 valign="middle"></A> </TD></TR>
  <TR>
    <TD align=middle><A 
      href="http://ebiz1.uspto.gov/vision-service/ShoppingCart_P/ShowShoppingCart?backUrl1=http%3A//164.195.100.11/netacgi/nph-Parser?Sect1%3DPTO1%26Sect2%3DHITOFF%26d%3DPALL%26p%3D1%26u%3D%2Fnetahtml%2Fsrchnum.htm%26r%3D1%26f%3DG%26l%3D50%26s1%3D6263354.WKU.%26OS%3DPN%2F6263354&amp;backLabel1=Back%20to%20Document%3A%206,263,354"><IMG 
      alt="[View Shopping Cart]" 
      src="United States Patent 6,263,354.files/cart.gif" border=0 
      valign="middle"></A> <A 
      href="http://ebiz1.uspto.gov/vision-service/ShoppingCart_P/AddToShoppingCart?docNumber=6,263,354&amp;backUrl1=http%3A//164.195.100.11/netacgi/nph-Parser?Sect1%3DPTO1%26Sect2%3DHITOFF%26d%3DPALL%26p%3D1%26u%3D%2Fnetahtml%2Fsrchnum.htm%26r%3D1%26f%3DG%26l%3D50%26s1%3D6263354.WKU.%26OS%3DPN%2F6263354&amp;backLabel1=Back%20to%20Document%3A%206,263,354"><IMG 
      alt="[Add to Shopping Cart]" 
      src="United States Patent 6,263,354.files/order.gif" border=0 
      valign="middle"></A> </TD></TR>
  <TR>
    <TD align=middle><A 
      href="http://patimg2.uspto.gov/.piw?Docid=06263354&amp;homeurl=http%3A%2F%2Fpatft.uspto.gov%2Fnetacgi%2Fnph-Parser%3FSect1%3DPTO1%2526Sect2%3DHITOFF%2526d%3DPALL%2526p%3D1%2526u%3D%2Fnetahtml%2Fsrchnum.htm%2526r%3D1%2526f%3DG%2526l%3D50%2526s1%3D6263354.WKU.%2526OS%3DPN%2F6263354%2526RS%3DPN%2F6263354&amp;PageNum=&amp;Rtype=&amp;SectionNum=&amp;idkey=5518D5E8D713"><IMG 
      alt=[Image] src="United States Patent 6,263,354.files/image.gif" border=0 
      valign="middle"></A> <!-- <A HREF=""><img border=0 src="/netaicon/PTO/patbib.gif" valign=middle></A>
<BR><FONT SIZE=4 COLOR="#CC3300">F</FONT><FONT SIZE=2 COLOR="#CC3300">ULL </FONT><FONT SIZE=4 COLOR="#CC3300">T</FONT><FONT SIZE=2 COLOR="#CC3300">EXT </FONT><FONT SIZE=4 COLOR="#CC3300">F</FONT><FONT SIZE=2 COLOR="#CC3300">ORMAT</FONT></STRONG> --></TD></TR></TBODY></TABLE></CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left width="50%">&nbsp;</TD>
    <TD vAlign=bottom align=right width="50%"><FONT size=-1>( 
      <STRONG>1</STRONG></FONT> <FONT size=-2>of</FONT> <STRONG><FONT 
      size=-1>1</STRONG> )</FONT></TD></TR></TBODY></TABLE>
<HR>

<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left width="50%"><B>United States Patent </B></TD>
    <TD align=right width="50%"><B><B><I>6,263,354</I></B> </B></TD></TR>
  <TR>
    <TD align=left width="50%"><B>Gandhi </B><!-- 2: Gandhi; Prashant P.
,
,
,
<br>Gandhi, ;, , ,  --></TD>
    <TD align=right width="50%"><B>July 17, 2001 </B></TD></TR></TBODY></TABLE>
<HR>
<FONT size=+1>Reduced multiplier digital IIR filters </FONT><BR><BR>
<CENTER><B>Abstract</B></CENTER>
<P>The application discloses a new digital IIR filter structure which uses at 
least one fewer multiplier than presently available in current digital IIR 
filter structures. In particular, by constraining one or both endpoint values (0 
and fs/2) to unity, the disclosed approach uses 2 multiply operations instead of 
3 for first-order structures and 3 multiply operations instead of 4 or 5 for 
second-order structures. This multiplier reduction enhances the capacity of the 
current audio equalizer digital signal processor by 30%. </P>
<HR>

<TABLE width="100%">
  <TBODY>
  <TR>
    <TD vAlign=top align=left width="10%">Inventors: </TD>
    <TD align=left width="90%"><B>Gandhi; Prashant P.</B> (Sunnyvale, CA) 
  </TD></TR>
  <TR>
    <TD vAlign=top align=left width="10%">Assignee: </TD>
    <TD align=left width="90%"><B>Texas Instruments Incorporated</B> (Dallas, 
      TX) </TD></TR>
  <TR>
    <TD vAlign=top noWrap align=left width="10%">Appl. No.: </TD>
    <TD align=left width="90%"><B>232430</B></TD></TR>
  <TR>
    <TD vAlign=top align=left width="10%">Filed: </TD>
    <TD align=left width="90%"><B>January 15, 1999</B></TD></TR></TBODY></TABLE>
<P>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD vAlign=top align=left width="40%"><B>Current U.S. Class:</B></TD>
    <TD vAlign=top align=right width="60%"><B>708/320</B> </TD></TR>
  <TR>
    <TD vAlign=top align=left width="40%"><B>Intern'l Class: </B></TD>
    <TD vAlign=top align=right width="60%">G06F 017/10</TD></TR>
  <TR>
    <TD vAlign=top align=left width="40%"><B>Field of Search: </B></TD>
    <TD vAlign=top align=right width="60%">708/300,301,313,319,320,321,322,323 
    </TD></TR></TBODY></TABLE>
<HR>

<CENTER><B>References Cited <A 
href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-adv.htm&amp;r=0&amp;f=S&amp;l=50&amp;d=CR01&amp;Query=ref/6,263,354">[Referenced 
By]</A></B></CENTER>
<HR>

<CENTER><B>U.S. Patent Documents</B></CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD width="25%"><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-bool.html&amp;r=1&amp;f=G&amp;l=50&amp;d=PALL&amp;RefSrch=yes&amp;Query=PN%2F4630299">4630299</A></TD>
    <TD width="25%">Dec., 1986</TD>
    <TD align=left width="25%">Welles, II et al.</TD>
    <TD align=right width="25%">381/4. </TD></TR>
  <TR>
    <TD width="25%"><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-bool.html&amp;r=1&amp;f=G&amp;l=50&amp;d=PALL&amp;RefSrch=yes&amp;Query=PN%2F5031133">5031133</A></TD>
    <TD width="25%">Jul., 1991</TD>
    <TD align=left width="25%">Sasaki</TD>
    <TD align=right width="25%">708/319. </TD></TR>
  <TR>
    <TD width="25%"><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-bool.html&amp;r=1&amp;f=G&amp;l=50&amp;d=PALL&amp;RefSrch=yes&amp;Query=PN%2F5170369">5170369</A></TD>
    <TD width="25%">Dec., 1992</TD>
    <TD align=left width="25%">Rossum</TD>
    <TD align=right width="25%">708/320. </TD></TR>
  <TR>
    <TD width="25%"><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-bool.html&amp;r=1&amp;f=G&amp;l=50&amp;d=PALL&amp;RefSrch=yes&amp;Query=PN%2F5339264">5339264</A></TD>
    <TD width="25%">Aug., 1994</TD>
    <TD align=left width="25%">Said et al.</TD>
    <TD align=right width="25%">708/319. </TD></TR>
  <TR>
    <TD width="25%"><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&amp;Sect2=HITOFF&amp;p=1&amp;u=%2Fnetahtml%2Fsearch-bool.html&amp;r=1&amp;f=G&amp;l=50&amp;d=PALL&amp;RefSrch=yes&amp;Query=PN%2F6009445">6009445</A></TD>
    <TD width="25%">Dec., 1999</TD>
    <TD align=left width="25%">Tsyrganovich</TD>
    <TD align=right width="25%">708/300. </TD></TR></TBODY></TABLE><BR>
<TABLE width="90%"><BR>
  <CENTER><B>Other References</B></CENTER>
  <TBODY>
  <TR>
    <TD align=left><BR>Bristow-Johnson, "The Equivalence of Various Methods of 
      Computing Biquad Coefficients for Audio Parametric Equalizers," AES, 97th 
      Convention, 3906 (K-6), Nov. '94. </TD></TR></TBODY></TABLE><BR><I>Primary 
Examiner:</I> Ngo; Chuong Dinh <BR><I>Attorney, Agent or Firm:</I> Holmbo; 
Dwight W., Brady, III; Wade James, Telecky, Jr.; Frederick J. <BR>
<HR>

<CENTER><B><I>Parent Case Text</B></I></CENTER>
<HR>
<BR><BR>This application claims priority under 35 USC .sctn.119(e)(1) of 
provisional application numbers 60/071,587 filed Jan. 15, 1998. 
<HR>

<CENTER><B><I>Claims</B></I></CENTER>
<HR>
<BR><BR>What is claimed is: <BR><BR>1. A digital filter architecture, 
implementing a desired transfer function, which has at least one constrained 
endpoint value, with a reduced number of multipliers, comprising: <BR><BR>one or 
more chains of delay stages; <BR><BR>a plurality of multiplier stages, 
consisting of less than 2j+1 multiplier stages in all; and <BR><BR>a plurality 
of addition stages, interconnected with said multiplier stages and with ones of 
said delay stages which are no more than j samples deep, to implement a transfer 
function with one or more constrained endpoint values; <BR><BR>wherein said 
multiplier stages implement a reduced coefficient set, which is reduced from 
2j+1 by using a priori knowledge of said constrained endpoint value of said 
transfer function. <BR><BR>2. The method of claim 1 wherein said transfer 
function is a frequency shelf function. <BR><BR>3. The method of claim 1 wherein 
each said multiplier stage is a multiply operation in a programmable processor. 
<BR><BR>4. The method of claim 1 wherein each said addition stage is an addition 
operation in a programmable processor. <BR><BR>5. The method of claim 1 wherein 
said transfer function is a equalizer function. <BR><BR>6. The method of claim 1 
wherein j=2. <BR><BR>7. The method of claim 1 comprising two said chains of 
delay stages. <BR><BR>8. The method of claim 1 wherein said addition and 
multiplier stages are configured in a modified DFI-type configuration. 
<BR><BR>9. A digital filter architecture, implementing a desired transfer 
function which has at least two constrained endpoint values with a reduced 
number of multipliers, comprising; <BR><BR>one or more chains of delay stages; 
<BR><BR>a plurality of multiplier stages, consisting of exactly 2j-1 multiplier 
stages in all; and <BR><BR>a plurality of addition stages, interconnected with 
said multiplier stages and with ones of said delay stages which are no more than 
j samples deep, to implement a transfer function with one or more constrained 
endpoint values; <BR><BR>wherein said multiplier stages implement a set of only 
2j-1 coefficients, which is reduced from 2j+1 by using a priori knowledge of 
said constrained endpoint values of said transfer function. <BR><BR>10. The 
method of claim 9 wherein each said multiplier stage is a multiply operation in 
a programmable processor. <BR><BR>11. The method of claim 9 wherein each said 
addition stage is an addition operation in a programmable processor. <BR><BR>12. 
The method of claim 9 wherein said transfer function is a equalizer function. 
<BR><BR>13. The method of claim 9 wherein j=2. <BR><BR>14. The method of claim 9 
comprising two said chains of delay stages. <BR><BR>15. The method of claim 9 
wherein said addition and multiplier stages are configured in a modified 
DFI-type configuration. <BR><BR>16. A digital IIR filter with one fewer 
multiplier, comprising: <BR><BR>first and second delay chains each comprising at 
least two delay stages; <BR><BR>a first addition stage connected to receive and 
combine the output of an intermediate node of said second delay chain and the 
output of an intermediate node of said first delay chain; <BR><BR>a second 
addition stage connected to receive and combine the doubly delayed output of 
said second delay chain and the doubly delayed output of said first delay chain; 
<BR><BR>a third addition stage connected to receive and combine the doubly 
delayed output of said first delay chain with an input signal; and <BR><BR>a 
plurality of further arithmetic stages functionally connected to combine the 
output of said first addition stage multiplied by a first gain coefficient, the 
output of said second addition stage multiplied by a second gain coefficient, 
the output of said third addition stage multiplied by a third gain coefficient, 
and the doubly delayed output of said first delay chain; <BR><BR>wherein said 
input signal is connected to an input of said first chain of delays and the 
output of said further stages is connected to an input of said second delay 
chain and also connected to provide an output signal. <BR><BR>17. The digital 
filter of claim 16, wherein <BR><BR>a first quantizing stage is connected to 
receive and quantize the output of said third addition stage; and <BR><BR>a 
second quantizing stage is connected to receive and quantize the sum of said 
first and second addition and multiplier stages. <BR><BR>18. A digital IIR 
filter with one fewer multiplier, comprising: <BR><BR>first and second delay 
chains each comprising at least one delay stage; <BR><BR>a first addition stage 
connected to receive and combine the output of said second delay chain with an 
input signal; <BR><BR>a second addition stage connected to receive and combine 
the output of said first delay chain and said input signal; and <BR><BR>a 
plurality of further arithmetic stages functionally connected to combine the 
output of said first addition stage multiplied by a first gain coefficient, the 
output of said second addition stage multiplied by a second gain coefficient, 
and said input signal; <BR><BR>wherein said input signal is connected to an 
input of said first chain of delays and the output of said further stages is 
connected to an input of said second delay chain and also connected to provide 
an output signal. <BR><BR>19. A digital IIR filter with one fewer multiplier, 
comprising: <BR><BR>first and second delay chains each comprising at least one 
delay stage; <BR><BR>a first addition stage connected to receive and combine the 
output of said first delay chain and said second delay chain; <BR><BR>a second 
addition stage connected to receive and combine an input signal and the output 
of said first delay chain; and <BR><BR>a plurality of further arithmetic stages 
functionally connected to combine the output of said first addition stage 
multiplied by a first gain coefficient, the output of said first delay chain, 
and the output of said second addition stage multiplied by a second gain 
coefficient; <BR><BR>wherein said input signal is connected to an input of said 
first chain of delays and the output of said further stages is connected to an 
input of said second delay chain and also connected to provide an output signal. 
<BR><BR>20. A programmable system comprising: <BR><BR>at least one programmable 
processor and numeric hardware which is programmed to perform: <BR><BR>one or 
more delay chain operations; <BR><BR>a plurality of multiply operations, 
consisting of less than 2j+1 multiply operations in all; and <BR><BR>a plurality 
of additions, interconnected with said multiply operations and with delay chain 
operations which are no more than j samples deep, to implement a transfer 
function with one or more constrained endpoint values; <BR><BR>wherein said 
multiply operations implement a coefficient set, which is reduced from 2j+1 by 
using a priori knowledge of said constrained endpoint value of said transfer 
function. <BR><BR>21. The method of claim 20 wherein said programmable processor 
is a digital signal processor. <BR><BR>22. An audio system comprising: 
<BR><BR>an audio source; <BR><BR>a preamp; <BR><BR>a digital equalizer 
comprising: <BR><BR>one or more chains of delay stages; <BR><BR>a plurality of 
multiplier stages, consisting of less than 2j+1 multiplier stages in all; and 
<BR><BR>a plurality of addition stages, interconnected with said multiplier 
stages and with delay stages which are no more than j samples deep, to implement 
a transfer function with one or more constrained endpoint values; 
<BR><BR>wherein said multiplier stages implement a reduced coefficient set, 
which is reduced from 2j+1 by using a priori knowledge of said constrained 
endpoint value of said transfer function; <BR><BR>a power amp; and 
<BR><BR>speakers. <BR><BR>23. The audio system of claim 22, wherein: 
<BR><BR>said digital equalizer comprises: <BR><BR>a second order digital IIR 
filter implementing the equation: <BR><BR>y(n)=b.sub.0 
{x(n)-x(n-2)}+x(n-2)+a.sub.1 {x(n-1)-y(n-1)}+a.sub.2 {x(n-2)-y(n-2)}. 
<BR><BR>24. A method of digital IIR filtering with a reduced number of 
multiplies, implementing a desired transfer function of order j which has at 
least one endpoint value constraint, comprising the steps of: <BR><BR>(a.) 
delaying digital signals for no more than j samples; and <BR><BR>(b.) performing 
a plurality of addition operations and less than 2j+1 multiply operations, which 
in combination with said delaying step implement said transfer function with a 
coefficient set which is reduced from 2j+1 by using a priori knowledge of said 
endpoint constraint. <BR><BR>25. The method of claim 24 wherein said transfer 
function is a frequency shelf function. <BR><BR>26. The method of claim 24 
wherein j=2. <BR><BR>27. The method of claim 24 wherein said addition and 
multiplier stages are configured in a modified DFI-type configuration. 
<HR>

<CENTER><B><I>Description</B></I></CENTER>
<HR>
<BR><BR>BACKGROUND AND SUMMARY OF THE INVENTION <BR><BR>The present invention 
relates to digital infinite impulse response (IIR) equalizer filters. 
<BR><BR>Digital Filters <BR><BR>A filter, simply put, is a system which modifies 
certain frequencies relative to others. A digital filter exists when the sets of 
inputs and outputs of a given filter are digital, i.e. they can assume only a 
finite number of possible amplitude values. Implementation of a digital filter 
requires that the function that operates on the set of inputs be reduced to a 
computational algorithm. A structure, or network, can then be implemented to 
produce the function. <BR><BR>Digital filters are generally defined by 
difference equations. A difference equation for a given filter will reveal the 
expected characteristics of the filter, such as the frequency poles and zeros 
and the order of the system. IIR Filters with a single frequency pole are known 
as first-order filters. IIR Filters with two frequency poles are known as 
second-order filters. First and second order filters are the most general and 
utilitarian designs of digital filters. They can be combined in parallel or 
cascade combinations to create filters of higher orders. <BR><BR>Most digital 
filters can be implemented with a combination of addition, multiplication, and 
delay elements or operations. General-purpose computers, including personal 
computers (or "PCs") or hardware such as a digital signal processor (or "DSP") 
may be used to implement a digital filter with these elements. In either case, 
the implementation of the filter serves as the specification, that is, the 
manner in which it is to perform. Computers and "host DSPs" utilize this 
specification as an algorithm specifying use of the control unit, arithmetic 
unit, storage registers, and multipliers (in a host DSP) to produce the desired 
set of outputs. Some dedicated-DSPs (or "DSP-ASICs") use the structure as a 
hardware configuration specification. <BR><BR>DSPs <BR><BR>DSPs, as implemented 
in very-large-scale integration (or "VLSI") circuits, are ideally suited to uses 
which require resources beyond the abilities of general-purpose computers. Such 
uses include processing of large amounts of data or where manipulation of data 
requires a high sampling rate or higher resolution per sample. A "host DSP" is a 
general-purpose DSP designed to accommodate a wide range of processing 
applications. As such, it offers a speed increase over general-purpose 
computers. A DSP-ASIC is designed with a specific application in mind. 
Therefore, it offers a speed advantage at least comparable to a host DSP as well 
as size and cost advantages due to its application-specific implementation. 
<BR><BR>The design characteristics of digital filters make them well suited to 
implementation in a DSP. The small number of elements used to describe a digital 
filter, combined with their highly parallel algorithmic structure, allow digital 
filters to readily be put into the context of a DSP. <BR><BR>DSPs offer not only 
higher speeds and resolutions than are available with general-purpose computer 
implementations of digital filters, but also lower cost and less space demand. 
The main advantage of DSP implementation of a digital filter is that the filter 
elements (addition, multiplication, and delay), as opposed to a general-purpose 
computer, do not have to be performed in sequence. That is, the DSP 
implementation offers opportunities for the elements to be performed in 
parallel. This results in increased throughput as compared to a general-purpose 
computer implementing the same filter. <BR><BR>Frequency Shelf Filters 
<BR><BR>FIGS. 5A and 5B graphically depict the functions of frequency shelf 
filters. Frequency shelf filters have a frequency response of unity at either 0 
or fs/2, where fs is the frequency sample rate. A low-frequency shelf filter has 
a frequency response of unity at fs/2 and increases (or decreases) monotonically 
toward 0. A high-frequency shelf filter has a frequency response of unity at 0 
and increases (or decreases) monotonically toward fs/2. <BR><BR>Frequency shelf 
filters are used in digital tone processing of audio signals. FIG. 5A represents 
the frequency response of a low-frequency shelf filter. FIG. 5B represents the 
frequency response of a high-frequency shelf filter. Generally, the boost and 
cut responses represented in each figure are chosen to be symmetric. FIGS. 5A 
and 5B reflect that both low and high frequency shelf filters are tied to a 
frequency response of unity at one end, 0 or fs/2. Therefore, frequency shelf 
filters can be implemented as digital first-order or higher order IIR filters. 
<BR><BR>A digital first-order filter can be represented by the transfer function 
H(z): ##EQU1## <BR><BR>where b.sub.o,b.sub.1, and a.sub.1 are filter 
coefficients and the term z.sup.-1 relates to a one time-unit delay. The 
coefficients of a particular filter are calculated using one of several 
theoretical design procedures: Butterworth, Chebyshev, elliptic, etc. The design 
procedure produces values for the needed coefficients based on parameters for 
the filter such as frequency response. <BR><BR>In time domain, the above 
representation of H(z) gives: <BR><BR>y(n)=b.sub.0 x(n)+b.sub.1 x(n-1)-a.sub.1 
y(n-1). <BR><BR>Implementation of the above difference equation as a digital 
filter requires 3 multiply operations and three corresponding coefficient memory 
elements, one for each filter coefficient, b.sub.0, b.sub.1, and a.sub.1. 
<BR><BR>Equalizer Filters <BR><BR>FIG. 3 graphically depicts the functions of an 
equalizer. An equalizer is a digital second-order IIR filter structure that 
allows boosting (gain larger than unity as in curve 304) or cutting (gain 
smaller than unity as in curve 306) of input signal frequencies centered around 
some design frequency f.sub.0 .di-elect cons. (0, fs/2). The gain is unity at 
the endpoints 0 and fs/2. Thus, the equalizer frequency response function 
H(e.sup.jw) must have H(e.sup.j0)=H(e.sup.ifs/2)=1. <BR><BR>Equalizers such as 
this are routinely used in audio tone control and speaker and room equalization 
in products such as consumer/PC audio, video, DVD and home theaters. <BR><BR>The 
current and future applications of digital equalizers necessitate DSP capacity 
enhancement. That is, it would be desirable to allow more equalizer processing 
than is currently available without incurring extra costs or increased space 
demands. <BR><BR>FIGS. 2A and 2B, described in detail below, schematically show 
the direct form I (DFI-type) and direct form II (DFII-type) implementation 
architectures for a second order IIR digital filter. A DFI-type implementation 
is the network realization corresponding to a difference equation which 
describes a particular filter. A DFII-type, or canonical, implementation is a 
DFI-type implementation which uses the minimum number of delay elements required 
for realization of the difference equation. Note that in either implementation, 
a second order IIR digital filter includes 5 multiply elements or operations. 
<BR><BR>Any reduction in the number of multipliers that can be achieved in the 
implementation of a digital filter, even at the expense of a greater number of 
addition elements, is significantly advantageous. Multiply operations tend to 
keep the DSP very busy due to the complexity of the mathematical operation. A 
reduction in multipliers decreases the number of clock cycles required for the 
filter to produce an output. Further, as multipliers are more complex than 
addition elements, the monetary cost of the implementation is reduced. 
<BR><BR>Finally, the physical size of the DSP on which the digital filter is 
implemented can be reduced due to fewer components being needed to produce the 
same result. As a corollary, instead of reducing chip size, a DSP could 
implement more digital filters with the same number of multipliers with only 
slight variation to the architecture, including an increase in the number of 
addition elements. <BR><BR>Reduced Multiplier Digital Filters <BR><BR>The 
present application discloses that digital equalizer filters can be implemented 
with fewer multipliers. The present disclosure uses at least one fewer 
multiplier for first and second order filters than current solutions. The 
present application discloses a 2-multiplier approach to first-order digital 
frequency shelf filters. Further, the present application discloses a 3 
multiplier approach to second-order digital e-qualization filters. <BR><BR>In 
both instances, this new filter structure uses at least one fewer multiplier 
than present digital equalizer structures. This multiplier reduction enhances 
the capacity of the current audio equalizer DSP by 30 percent. The disclosed 
reduction in the number of multipliers required to implement some digital IIR 
equalization filter provides several advantages. One advantage is that the 
processing capacity of the audio equalizer DSP is enhanced by reducing the 
computational requirements imposed by first and second order digital IIR 
filters. That is, the number of multiply operations for first-order structures 
is reduced by 33 percent and the number of multiply operations for second-order 
structures is reduced by 25 percent. For current and future DSPs, this 
multiplier-efficient structure would, as an example, enhance an 11-filter 
capacity DSP to at least a 14-filter capacity. This allows having the ability to 
provide enhanced and differentiated processing features for the same cost. For 
instance, instead of a 5-band stereo equalizer, the DSP can provide a 7-band 
stereo equalizer for substantially the same cost. Another practical advantage is 
that the present disclosure requires approximately 20 percent less computation 
in a microcode implementation of a DSP or one less multiplier in a dedicated 
hardware DSP and requires one fewer coefficient storage word in either case. 
This results in faster computational output and reduced cost. <BR><BR>BRIEF 
DESCRIPTION OF THE DRAWINGS <BR><BR>The disclosed inventions will be described 
with reference to the accompanying drawings, which show important sample 
embodiments of the invention and which are incorporated in the specification 
hereof by reference, wherein: <BR><BR>FIG. 1 schematically shows a DFI-type 
signal flow diagram of a 3-multiplier second-order digital IIR filter. 
<BR><BR>FIG. 2A schematically shows the conventional direct form I (DFI-type) 
implementation architecture for a second order digital IIR filter. <BR><BR>FIG. 
2B schematically shows the conventional direct form II (DFII-type) 
implementation architecture for a second order digital IIR filter <BR><BR>FIG. 3 
graphically depicts the functions of an equalizer. <BR><BR>FIG. 4 schematically 
shows a DFI-type signal flow diagram of the 3 multiplier second-order digital 
IIR equalizer filter with quantization. <BR><BR>FIG. 5A graphically depicts the 
functions of a low-frequency shelf filter. <BR><BR>FIG. 5B graphically depicts 
the functions of a high-frequency shelf filter. <BR><BR>FIG. 6A schematically 
shows a DFI-type signal flow diagram of a first-order digital IIR low-frequency 
shelf filter with one fewer multiplier. <BR><BR>FIG. 6B schematically shows a 
DFI-type signal flow diagram of a first-order digital IIR high-frequency shelf 
filter with one fewer multiplier. <BR><BR>FIG. 7A schematically shows an 
alternative DFI-type signal flow diagram of a first-order digital IIR 
low-frequency shelf filter with one fewer multiplier. <BR><BR>FIG. 7B 
schematically shows an alternative DFI-type signal flow diagram of a first-order 
digital IIR high-frequency shelf filter with one fewer multiplier. <BR><BR>FIG. 
8A schematically shows a DFI-type signal flow diagram of a second-order digital 
IIR low-frequency shelf filter with one fewer multiplier. <BR><BR>FIG. 8B 
schematically shows a DFI-type signal flow diagram of a second-order digital IIR 
high-frequency shelf filter with one fewer multiplier. <BR><BR>FIG. 9 depicts a 
block diagram of the signal processing of an audio system which utilizes the 
reduced multiplier digital IIR equalizer filters. <BR><BR>FIG. 10 schematically 
shows a DFI-type signal flow diagram which illustrates the implementation of a 
third-order difference equation using five coefficients, b.sub.0, b.sub.1, 
a.sub.1, a.sub.2, and a.sub.3. <BR><BR>DETAILED DESCRIPTION OF THE PREFERRED 
EMBODIMENTS <BR><BR>The numerous innovative teachings of the present application 
will be described with particular reference to the presently preferred 
embodiment. However, it should be understood that this class of embodiments 
provides only a few examples of the many advantageous uses of the innovative 
teachings herein. In general, statements made in the specification of the 
present application do not necessarily delimit any of the various claimed 
inventions. Moreover, some statements may apply to some inventive features but 
not to others. <BR><BR>Digital Filter Architecture <BR><BR>In the z-domain, a 
digital filter function for an equalizer can be represented by the transfer 
function H(z) given by: ##EQU2## <BR><BR>where b.sub.0, b.sub.1, b.sub.2, 
a.sub.1, and a.sub.2 are the coefficients of the filter and z.sup.-1 and 
z.sup.-2 represent delays (unit delay and two-unit delays, respectively). The 
time-domain expression, or difference equation, representing the output in terms 
of input is given by <BR><BR>y(n)=b.sub.0 x(n)+b.sub.1 x(n-1)+b.sub.2 
x(n-2)-a.sub.1 y(n-1)-a.sub.2 y(n-2), <BR><BR>where: <BR><BR>y(n)=filter output 
<BR><BR>x(n)=filter input <BR><BR>b.sub.0, b.sub.1, b.sub.2, a.sub.1, a.sub.2 = 
filter coefficients <BR><BR>x(n-1), x(n-2)=feed forward states (i.e., delayed 
inputs) <BR><BR>y(n-1), y(n-2)=feedback states (i.e. delayed outputs) 
<BR><BR>n=time-index (discrete). <BR><BR>FIG. 2A schematically shows the 
DFI-type implementation architecture for a second order IIR digital filter 
difference equation above. In DFI-type, separate delays are used for the input 
and output signals and separate addition elements are used for each term. FIG. 
2B schematically shows the DFII-type implementation architecture for a second 
order IIR digital filter. <BR><BR>In FIG. 2A, an input signal, x.sub.n, is 
multiplied by the coefficient b.sub.0 at multiplier 206. In parallel with the 
previous operation, an input signal that has been delayed one time unit, 
x.sub.n-1, by unit delay 208 is multiplied by the coefficient b.sub.1, at 
multiplier 212. In parallel with the previous operations, an input signal that 
has been delayed two time units, X.sub.n-2, by unit delays 208 and 214 is 
multiplied by the coefficient b.sub.2 at multiplier 218. The product of 
multiplier 212 is then added to the product of multiplier 218 at addition 
element 220. The result from addition element 220 is then added to the product 
of multiplier 206 at addition element 222. In parallel with the previous 
operations, an output signal that has been delayed by one time unit, y.sub.n-1, 
by unit delay 224 is multiplied by the coefficient a.sub.1 226 at multiplier 
228. In parallel with the previous operation, an input signal that has been 
delayed by two time units, Y.sub.n-2, by unit delays 224 and 230 is multiplied 
by the coefficient a.sub.2 at multiplier 234. The product of multiplier 234 is 
added to the product of multiplier 228 at addition element 236. The result from 
addition element 236 is subtracted from the result of addition element 222 at 
addition element 238. The result is output signal y.sub.n. <BR><BR>In FIG. 2B, 
the individual elements of the above difference equation are also present. 
However, fewer elements are used in the implementation. An input signal, 
x.sub.n, is multiplied by the coefficient b.sub.0 at multiplier 206. In parallel 
with the previous operation, an input signal that has been delayed one time 
unit, x.sub.n-1, by unit delay 208 is multiplied by the coefficient b.sub.1, at 
multiplier 212. In parallel with the previous operations, an input signal that 
has been delayed two time units, x.sub.n-2, by unit delays 208 and 214 is 
multiplied by the coefficient b.sub.2 at multiplier 218. The product of 
multiplier 212 is then added to the product of multiplier 218 at addition 
element 220. The result of addition element 220 is then added to the product of 
multiplier 206 at addition element 222. In parallel with the previous 
operations, an output signal that has been delayed by one time unit, y.sub.n-1, 
by unit delay 204 is multiplied by the coefficient a, at multiplier 228. In 
parallel with the previous operation, an input signal that has been delayed by 
two time unit, y.sub.n-2, by unit delays 204 and 214 is multiplied by the 
coefficient a.sub.2 at multiplier 234. The product of multiplier 234 is added to 
the product of multiplier 228 at addition element 236. The result from addition 
element 236 is subtracted from the result of addition element 222 at addition 
element 238. The result is output signal y.sub.n. <BR><BR>Implementation of the 
above difference equation as a digital filter requires 5 multiply operations and 
three corresponding coefficient memory elements, one for each filter 
coefficient, b.sub.0, b.sub.1, b.sub.2, a.sub.1, and a.sub.2. However, one 
method exists which reduces this number to 4. <BR><BR>Unit delays 208, 214, 224, 
and 230 provide a way for past values of input, output, and intermediate values 
within the filter to be made available. The time length of a unit delay is the 
time required to add one sample. For a k-bit sample added with a bit-serial 
adder, a one-unit delay represents k clock cycles. For samples added with a 
bit-parallel adder, a one-unit delay represents one clock cycle. 
<BR><BR>Overview <BR><BR>FIGS. 6A and 6B show the innovative first-order digital 
IIR low-frequency and high-frequency shelf filters, respectively, with one fewer 
multiplier. Current DFI-type and DFII-type implementations of first-order 
digital IIR filters require 3 multipliers. However, when constrained to operate 
as a high or low frequency shelf filter, the innovation requires only 2. This 
innovative filter requires two extra addition elements when compared to other 
first-order filter implementations However, addition for multiplication trade 
off is desirable as an addition element is much cheaper, both in terms of 
monetary cost and system resources, to implement (in microcode or dedicated 
hardware) than a multiplier. <BR><BR>FIG. 1 shows a sample implementation of the 
innovative 3-multiplier second-order bi-quad equalizer digital IIR filter. FIG. 
1, like FIGS. 2A and 2B, is a second-order digital IIR filter. However, fewer 
multipliers are used to implement the digital filter of FIG. 1 when compared to 
FIGS. 2A and 2B. That is, 3 multipliers are used instead of 5. This innovative 
filter requires two extra addition elements when compared to the filter 
implementation of FIGS. 2A and 2B. However, addition for multiplication trade 
off is desirable as an addition element is much cheaper, both in terms of 
monetary cost and system resources, to implement (in microcode or dedicated 
hardware) than a multiplier. <BR><BR>Detailed Discussion <BR><BR>First-Order 
Shelf Digital IIR Filter With One Fewer Multiplier <BR><BR>The digital IIR 
filter structure for first-order filters, generally requires three multipliers. 
However, when constrained to operate as a shelf filter, the complexity of the 
implementation can be reduced to require only two multipliers. <BR><BR>A digital 
first-order IIR filter is represented by the transfer function H(z): ##EQU3## 
<BR><BR>FIGS. 5A and 5B graphically depict first-order shelf response (boost or 
cut) for low-frequency and high-frequency shelf filters. For the low-frequency 
shelf, H.sub.LF (Z), the transfer function is represented by: ##EQU4## 
<BR><BR>whereas, for the high-frequency shelf, H.sub.HF (Z), the transfer 
function is represented by: ##EQU5## <BR><BR>Therefore, the difference equation 
which describes the low-frequency shelf implementation is represented by: 
##EQU6## <BR><BR>Similarly, the difference equation which describes the 
high-frequency shelf implementation is represented by: <BR><BR>##EQU7## 
<BR><BR>In the case of both the low-frequency shelf and the high-frequency 
shelf, the output of the filter, y.sub.n, is obtained using two multiply 
operations with coefficients b.sub.1, and a.sub.1, FIGS. 6A and 6B schematically 
depict signal flow diagrams for the above time-domain representations of the low 
and high frequency shelf filters, respectively. <BR><BR>In FIG. 6A, the 
implementation of the difference equation for a first-order low-frequency shelf 
filter is shown in signal flow diagram form. The input signal x.sub.n is added, 
at addition element 604 to an input signal that has been delayed one time unit, 
x.sub.n-1, by unit delay 606 and multiplied by the coefficient b.sub.1, at 
multiplier 610. The product is then added to the input signal, x.sub.n, at 
addition element 612. In parallel with the previous operations, the input 
signal, x.sub.n, is added to an output signal that has been delayed one time 
unit, y.sub.n-1, by unit delay 614 at addition element 616. The result is 
multiplied by coefficient a.sub.1, at multiplier 620. The product is subtracted 
from the result of addition element 612 at addition element 622. The result is 
output signal y.sub.n. <BR><BR>In FIG. 6B, the implementation of the difference 
equation for a first-order high-frequency shelf filter is shown in signal flow 
diagram form. The input signal, x.sub.n, is subtracted, at addition element 604 
from an input signal that has been delayed one time unit, x.sub.n-1, by unit 
delay 606 and multiplied by the coefficient b.sub.1, at multiplier 610. The 
product is then added to the input signal, x.sub.n, at addition element 612. In 
parallel with the previous operations, an output signal that has been delayed 
one time unit, y.sub.n-1, by unit delay 614 is subtracted from the input signal, 
x.sub.n, at addition element 616. The result is multiplied by coefficient 
a.sub.1 at multiplier 620. The product is added to the result of addition 
element 612 at addition element 622. The result is output signal y.sub.n. 
<BR><BR>Alternatively, b.sub.1 =b.sub.0 +a.sub.1 -1 or b.sub.1 =1+a.sub.1 
-b.sub.0 may be chosen as substitutes in the low and high frequency shelf 
difference equations, respectively. This yields a difference equation of 
<BR><BR>y.sub.n =b.sub.0 (x.sub.n +x.sub.n-1)-x.sub.n-1 -a1(y.sub.n-1 
-x.sub.n-1) <BR><BR>for the low-frequency shelf filter, and <BR><BR>y.sub.n 
=b.sub.0 (x.sub.n -x.sub.n-1)+x.sub.n-1 -a.sub.1 (y.sub.n-1 -x.sub.n-1) 
<BR><BR>for the high-frequency shelf filter. <BR><BR>In FIG. 7A, the 
implementation of the alternative difference equation for a low-frequency shelf 
filter is shown in signal flow diagram form. The input signal, x.sub.n, is 
added, at addition element 604 to an input signal that has been delayed one time 
unit, x.sub.n-1, by unit delay 606 and multiplied by the coefficient b.sub.0 626 
at multiplier 610. The one time unit delayed input signal, x.sub.n-1, is then 
subtracted from the product of multiplier 610 at addition element 612. In 
parallel with the previous operations, the one time unit delayed input signal, 
x.sub.n-1, is subtracted from an output signal that has been delayed one time 
unit, y.sub.n-1, by unit delay 614 at addition element 616. The result is 
multiplied by coefficient a.sub.1 at multiplier 620. The product is subtracted 
from the result of addition element 612 at addition element 622. The result is 
output signal y.sub.n. <BR><BR>In FIG. 7B, the implementation of the alternative 
difference equation for a high-frequency shelf filter is shown in signal flow 
diagram form. An input signal that has been delayed one time unit by unit delay 
606 is subtracted from the input signal, x.sub.n, at addition element 604 to and 
multiplied by the coefficient b.sub.0 at multiplier 610. The one time unit 
delayed input signal, x.sub.n-1, is then added to the product of multiplier 610 
at addition element 612. In parallel with the previous operations, the one time 
unit delayed input signal, x.sub.n-1, is subtracted from an output signal that 
has been delayed one time unit, y.sub.n-1, by unit delay 614 at addition element 
616. The result is multiplied by coefficient a.sub.1, at multiplier 620. The 
product is subtracted from the result of addition element 612 at addition 
element 622. The result is output signal y.sub.n. <BR><BR>The computation and 
memory requirements for current first order shelf filters and the innovative 
disclosed first-order shelf filters are compared in the table below: <BR><BR><PRE>                  Addition  Multiplier  Coefficient State Variable
    Filter Type   elements   elements     Memory       Memory
    Current           2          3           3            2
    Disclosed         4          2           2            2
    (FIGS. 6A, 6B, 7A, and 7B)
</PRE><BR><BR>The same substitution procedure can be followed to accomplish a 
reduction in multipliers for second-order shelf response filters. For the 
second-order low-frequency shelf, H.sub.LF (Z), the transfer function is 
represented by: ##EQU8## <BR><BR>The implementation of the second-order 
low-frequency shelf difference equation above is schematically depicted in FIG. 
8A. <BR><BR>Similarly, for the second-order high-frequency shelf, H.sub.HF (Z), 
the transfer function is represented by: ##EQU9## <BR><BR>The implementation of 
the second-order high-frequency shelf difference equation above is schematically 
depicted in FIG. 8B. <BR><BR>The computation and memory requirements for current 
second-order shelf filters and the innovative disclosed second-order shelf 
filters are compared in the table below: <BR><BR><PRE>                  Addition  Multiplier  Coefficient State Variable
    Filter Type   elements   elements     Memory       Memory
    Current           4          5           5            4
    Disclosed         8          4           4            4
    (FIGS. 8A and 8B)
</PRE><BR><BR>Both the disclosed first and second order frequency shelf filters 
are implemented with fewer multipliers than current filter implementations. The 
disclosed implementations eliminate a multiplier and coefficient storage unit in 
favor of a greater number of addition operations while producing the same 
output. Any reduction in multiply operations, even at the expense of a greater 
number of addition elements is highly desirable. The benefit is substantial when 
multiple such filter structures are to be implemented in one DSP. 
<BR><BR>3-Multiplier Second-Order Digital IIR Bi-Quad Equalizer Filter 
<BR><BR>The two fundamental conditions on a bi-quad equalizer, i.e. H(e.sup.jw) 
with w=0 or 27.pi.fs/2, imply that the transfer function H(z), with z=e.sup.jw, 
must satisfy: <BR><BR>H(z).vertline..sub.z=1 or -1 =1 <BR><BR>In other words: 
##EQU10## <BR><BR>From this function, two equations are obtained: b.sub.0 
+b.sub.1 +b.sub.2 =1+a.sub.1 +a.sub.2 and b.sub.0 -b.sub.1 +b.sub.2 =1-a.sub.1 
+a.sub.2 . <BR><BR>It has been shown that b.sub.1 =a.sub.1, for bi-quad 
equalizer filter coefficients in Robert Bristow-Johnson, THE EQUIVALENCE OF 
VARIOUS METHODS OF COMPUTING BI-QUAD COEFFICIENTS FOR AUDIO PARAMETRIC 
EQUALIZERS, 97th Convention of the Audio Engineering Society, 3906 (k-6), 
November 1994, which is incorporated herein by reference. Therefore, a rewriting 
of the above equations yields: b.sub.2 =a.sub.2 -b.sub.0 +1(or b.sub.0 =a.sub.2 
-b.sub.2 +1 or a.sub.2 =b.sub.0 +b.sub.2 -1). Thus, given three coefficients 
b.sub.0, a.sub.1, and a.sub.2, the remaining coefficients can be obtained by 
simple addition (or subtraction). Substituting b.sub.1 =a.sub.1, and b.sub.2 
=a.sub.2 -b.sub.0 +1 in the time-domain equation yields: <BR><BR>y(n)=b.sub.0 
x(n)+b.sub.1 x(n-1)+b.sub.2 x(n-2)-a.sub.1 y(n-1)-a.sub.2 y(n-2), which can be 
rewritten as: <BR><BR>y(n)=b.sub.0 {x(n)-x(n-2)}+x(n-2)+a.sub.1 
{x(n-1)-y(n-1)}+a.sub.2 {x(n-2)-y(n-2)}. <BR><BR>FIG. 1 schematically shows a 
DFI-type signal flow diagram which illustrates the implementation of the above 
difference equation using three coefficients, b.sub.0, a.sub.1, and a.sub.2. In 
FIG. 1, an input signal that has been delayed two time units, x.sub.n-2, by unit 
delays 104 and 106 is subtracted from the input signal x.sub.n at addition 
element 108 and the result is multiplied by the coefficient b.sub.0 at 
multiplier 112. The two time unit delayed input signal, x.sub.n-2, s then added 
to the product of multiplier 112 at addition element 114. In parallel with the 
previous operations, an output signal that has been delayed by one time unit, 
y.sub.n-1, by unit delay 116 is subtracted from an input signal that has been 
delayed by one time unit, x.sub.n-1, by unit delay 104 at addition element 118 
and the result is multiplied by coefficient a.sub.1 at multiplier 122. The 
product of multiplier 120 is added to the result from addition element 114 at 
addition element 124. In parallel with the previous operations, an output signal 
that has been delayed two time units, y.sub.n-2, by unit delays 116 and 126 is 
subtracted from the two time unit delayed input signal, x.sub.n-2, at addition 
element 128 and the result is multiplied by the coefficient a.sub.2 at 
multiplier 132. The product of multiplier 130 is added to the result of addition 
element 134. The result is output signal y.sub.n. <BR><BR>Other equivalent 
representations are possible as well. For example: b.sub.0 =a.sub.2 -b.sub.2 +1 
or a.sub.2 =b.sub.0 +b.sub.2 -1 can be substituted into the difference equation 
instead of b.sub.2 =a.sub.2 -b.sub.0 +1. This will yield a digital filter with 
an equivalent output, y.sub.n of the filter described in FIG. 1. The 
architecture may vary but the number of multipliers will remain constant. 
<BR><BR>The computation and memory requirements for current second-order bi-quad 
equalizer digital IIR filters and the innovative disclosed second-order bi-quad 
equalizer digital IIR filter are compared in the table below: <BR><BR><PRE>                  Addition  Multiplier  Coefficient State Variable
    Filter Type   elements   elements     Memory       Memory
    Current           4          5           4            4
    Disclosed         5          3           3            4
    (FIG. 1)
</PRE><BR><BR>The disclosed second-order bi-quad equalizer digital IIR filter is 
implemented with fewer multipliers than current filter implementations of the 
same type and order. The disclosed implementations do require a greater number 
of addition operations to account for the reduced multipliers and coefficient 
storage demands. However, for a 24-bit coefficient, a multiplier implemented in 
add-shift architecture would require 12 addition operations. Replacement of such 
a multiplier by an addition element would save 11 addition operations. 
Therefore, any reduction in multiply operation, even at the expense of a greater 
number of addition elements is highly desirable. The benefit is substantial when 
multiple such filter structures are to be implemented in one DSP. <BR><BR>FIG. 4 
schematically depicts the DFI-type signal flow diagram of the 3 multiplier 
second-order digital IIR equalizer filter of FIG. 1, with a quantization step. 
The signal flow of FIG. 1 is altered slightly to take account of the 
quantization steps. In FIG. 4, an input signal that has been delayed two time 
units, x.sub.n-2, by unit delays 104 and 106 is subtracted from the input signal 
x.sub.n at addition element 108 and the result is multiplied by the coefficient 
b.sub.0 at multiplier 112. The result is then quantized at quantizer 136. The 
two time unit delayed input signal, x.sub.n-2, is then added to the product of 
multiplier 112 at addition element 114. In parallel with the previous 
operations, an output signal that has been delayed by one time unit, y.sub.n-1, 
by unit delay 116 is subtracted from an input signal that has been delayed by 
one time unit, x.sub.n-1, by unit delay 104 at addition element 118 and the 
result is multiplied by coefficient a.sub.1, at multiplier 122. In parallel with 
the previous operations, an output signal that has been delayed two time units, 
y.sub.n-2, by unit delays 116 and 126 is subtracted from the two time unit 
delayed input signal, x.sub.n-2, at addition element 128 and the result is 
multiplied by the coefficient a.sub.2 at multiplier 132. The product of 
multiplier 130 is added to the result of the product of multiplier 120 at 
addition element 124. The result is then quantized at quantizer 138. The result 
is then added to the result of addition element 114 at addition element 134. The 
result is output signal y.sub.n. <BR><BR>FIG. 9 depicts a block diagram of the 
signal processing of an audio system which utilizes the reduced multiplier 
digital IIR equalizer filters. An equalizer, audio tone control, and volume 
control are each part of a digital signal processing hardware which also 
includes a DSP controller, control circuitry and memory. The equalizer receives 
a digitized audio signal. The signal is processed by the DSP hardware. A digital 
to analog converter converts the signal for output as an analog audio signal 
which is received by a power amp and passed to the speaker system. The equalizer 
block utilizes 3-multiplier second-order digital IIR filters. The audio tone 
control block utilizes 2-multiplier frequency shelf filters. 
<BR><BR>Higher-Order Digital IIR Bi-quad Equalizer Filters <BR><BR>Reduction of 
multipliers can be achieved in filters of higher than first or second order as 
long as the same fundamental conditions of a bi-quad equalizer are satisfied. 
For example, the transfer function, H(z), of a third-order filter can be written 
as: ##EQU11## <BR><BR>From this function, two equations are obtained: 
<BR><BR>b.sub.0 +b.sub.1 +b.sub.2 +b.sub.3 =1+a.sub.1 +a.sub.2 +a.sub.3 and 
b.sub.0 -b.sub.1 +b.sub.2 -b.sub.3 =1-a.sub.1 +a.sub.2 -a.sub.3. <BR><BR>Adding 
the two equations yields: b.sub.2 =1+a.sub.2 -b.sub.0 and subtracting the second 
equation from the first yields: b.sub.3 =a.sub.1 +a.sub.3 -b.sub.1. Substituting 
these values into the time-domain equation for the filter yields: 
<BR><BR>y(n)=b.sub.0 {x(n)}+b.sub.1 {x(n-1)}+(1a.sub.2 
-b.sub.0){x(n-2)}+(a.sub.1 +a.sub.3 -b.sub.1){x(n-2)}-a.sub.1 {y(n-1)}-a.sub.2 
{y(n-2)}-a.sub.3 {y(n-3)}, <BR><BR>which can be rewritten as: 
<BR><BR>y(n)=b.sub.0 {x(n)-x(n-2)}+b.sub.1 {x(n-1)-x 
<BR><BR>(N-3)}+x(n-2)+a.sub.1 {x(n-3)-y(n-1)}+a.sub.2 {x(n-2)-y(n-2)}+a.sub.3 
{x(n-3)y(n-3). <BR><BR>FIG. 10 schematically shows a DFI-type signal flow 
diagram which illustrates the implementation of the above difference equation 
using five coefficients, b.sub.0, b.sub.1, a.sub.1, a.sub.2, and a.sub.3. Other 
equivalent representations of this third-order filter as well as filters of 
higher order are possible. <BR><BR>According to a disclosed class of innovative 
embodiments, there is provided a digital filter architecture, implementing a 
desired transfer function which has at least one constrained endpoint value with 
a reduced number of multipliers, comprising: one or more chains of delay stages; 
a plurality of multiplier stages, consisting of less than 2j +1 multiplier 
stages in all; and a plurality of addition stages, interconnected with said 
multiplier stages and said delay stages which are no more than j samples deep, 
to implement a transfer function with one or more constrained endpoint values; 
wherein said multiplier stages implement a reduced coefficient set, which is 
reduced from 2j +1 by using a priori knowledge of said constrained endpoint 
value of said transfer function. <BR><BR>According to a disclosed class of 
innovative embodiments, there is provided a digital filter architecture, 
implementing a desired transfer function which has at least two constrained 
endpoint values with a reduced number of multipliers, comprising: one or more 
chains of delay stages; a plurality of multiplier stages, consisting of exactly 
2j-1 multiplier stages in all; and a plurality of addition stages, 
interconnected with said multiplier stages and said delay stages which are no 
more than j samples deep, to implement a transfer function with one or more 
constrained endpoint values; wherein said multiplier stages implement a set of 
only 2j-1 coefficients, which is reduced from 2j +1 by using a priori knowledge 
of said constrained endpoint values of said transfer function. <BR><BR>According 
to a disclosed class of innovative embodiments, there is provided a digital IIR 
filter with one fewer multiplier, comprising: first and second delay chains each 
comprising at least two delay stages; a first addition stage connected to 
receive and combine the output of the intermediate node of said second delay 
chain and the output of the intermediate node of said first delay chain; a 
second addition stage connected to receive and combine the doubly delayed output 
of said second delay chain and the doubly delayed output of said first delay 
chain; a third addition stage connected to receive and combine the doubly 
delayed output of said first delay chain from an input signal; and a plurality 
of further arithmetic stages functionally connected to combine the output of 
said first addition stage multiplied by a first gain coefficient, the output of 
said second addition stage multiplied by a second gain coefficient, the output 
of said third addition stage multiplied by a third gain coefficient, and the 
doubly delayed output of said first delay chain; wherein said input signal is 
connected to an input of said first chain of delays and the output of said 
further stages is connected to an input of said second delay chain and also 
connected to provide an output signal. <BR><BR>According to a disclosed class of 
innovative embodiments, there is provided a digital IIR filter with one fewer 
multiplier, comprising: first and second delay chains each comprising at least 
one delay stage; a first addition stage connected to receive and combine the 
output of said second delay chain with an input signal; a second addition stage 
connected to receive and combine the output of said first delay chain and said 
input signal; and a plurality of further arithmetic stages functionally 
connected to combine the output of said first addition stage multiplied by a 
first gain coefficient, the output of said second addition stage multiplied by a 
second gain coefficient, and said input signal; wherein said input signal is 
connected to an input of said first chain of delays and the output of said 
further stages is connected to an input of said second delay chain and also 
connected to provide an output signal. <BR><BR>According to a disclosed class of 
innovative embodiments, there is provided a digital IIR filter with one fewer 
multiplier, comprising: first and second delay chains each comprising at least 
one delay stage; a first addition stage connected to receive and combine the 
output of said first delay chain and said second delay chain; a second addition 
stage connected to receive and combine an input signal and the output of said 
first delay chain; and a plurality of further arithmetic stages functionally 
connected to combine the output of said first addition stage multiplied by a 
first gain coefficient, the output of said first delay chain, and the output of 
said second addition stage multiplied by a second gain coefficient; wherein said 
input signal is connected to an input of said first chain of delays and the 
output of said further stages is connected to an input of said second delay 
chain and also connected to provide an output signal. <BR><BR>According to a 
disclosed class of innovative embodiments, there is provided a programmable 
system comprising: at least one programmable processor and numeric hardware 
which is programmed to perform: one or more delay chain operations; a plurality 
of multiply operations, consisting of less than 2j +1 multiply operations in 
all; and a plurality of additions, interconnected with said multiply operations 
and with delay chain operations which are no more than j samples deep, to 
implement a transfer function with one or more constrained endpoint values; 
wherein said multiply operations implement a coefficient set, which is reduced 
from 2j+1 by using a priori knowledge of said constrained endpoint value of said 
transfer function. <BR><BR>According to a disclosed class of innovative 
embodiments, there is provided an audio system comprising: an audio source; a 
primp; a digital equalizer comprising: one or more chains of delay stages; a 
plurality of multiplier stages, consisting of less than 2j +1 multiplier stages 
in all; and a plurality of addition stages, interconnected with said multiplier 
stages and with delay stages which are no more than j samples deep, to implement 
a transfer function with one or more constrained endpoint values; wherein said 
multiplier stages implement a reduced coefficient set, which is reduced from 2j 
+1 by using a priori knowledge of said constrained endpoint value of said 
transfer function; a power amp; and speakers. <BR><BR>According to a disclosed 
class of innovative embodiments, there is provided a method of digital IIR 
filtering with a reduced number of multiplies, implementing a desired transfer 
function of order j which has at least one endpoint value constraint, comprising 
the steps of: delaying digital signals for no more than j samples; and 
performing a plurality of addition operations and less than 2j +1 multiply 
operations, which in combination with said delaying step implement said transfer 
function with a coefficient set which is reduced from 2j +1 by using a priori 
knowledge of said endpoint constraint. <BR><BR>Modifications and Variations 
<BR><BR>As will be recognized by those skilled in the art, the innovative 
concepts described in the present application can be modified and varied over a 
tremendous range of applications, and accordingly the scope of patented subject 
matter is not limited by any of the specific exemplary teachings given, but is 
only defined by the issued claims. <BR><BR>For example, the reduced multiplier 
filter, although primarily for audio/video applications, can be utilized in any 
application with the constraint that the frequency response be unity at fs/2, 0, 
or both. This corresponds to a z-domain unity at 1, -1, or both. With a 
frequency response of unity at either fs/2 or 0, the reduction of one multiplier 
is achieved. With a frequency response of unity at both fs/2 and 0, the 
reduction of two multipliers is achieved. <BR><BR>For another example, the 
reduced multiplier filter is not limited to just first and second-order filters. 
Filters of higher-order can make use of the reduced multiplier filter as long as 
the above constraints are met. <BR><BR>Several implementation structures exist 
for digital filters. The DFI-type and DFII-type structures are derived from 
difference equations. However, the reduction in multipliers is not limited to 
DFI-type or DFII-type structures. Structures which are developed directly from a 
system function may also take advantage of the reduction in multipliers. 
Moreover, other approaches, such as those based on state-variable 
representations and linear transformations or on digital emulation of analog 
filters may also take advantage of the reduction in multipliers. <BR><BR>Further 
details of the system context and of options for implementation may be found in 
Alan V. Oppenheim and Ronald W. Schafer, DISCRETE-TIME SIGNAL PROCESSING (1989); 
Leland B. Jackson, DIGITAL FILTERS AND SIGNAL PROCESSING (1986); Lawrence R. 
Rabiner and Bernard Gold, THEORY AND APPLICATION OF DIGITAL SIGNAL PROCESSING 
(1975); and Alan V. Oppenheim and Ronald W. Schafer, DIGITAL SIGNAL PROCESSING 
(1975); all of which are hereby incorporated by reference. <BR><BR>
<CENTER><B>* * * * *</B></CENTER>
<HR>

<CENTER><!-- <A HREF=""><img border=0 src="/netaicon/PTO/patbib.gif" valign=middle></A> --><A 
href="http://patimg2.uspto.gov/.piw?Docid=06263354&amp;homeurl=http%3A%2F%2Fpatft.uspto.gov%2Fnetacgi%2Fnph-Parser%3FSect1%3DPTO1%2526Sect2%3DHITOFF%2526d%3DPALL%2526p%3D1%2526u%3D%2Fnetahtml%2Fsrchnum.htm%2526r%3D1%2526f%3DG%2526l%3D50%2526s1%3D6263354.WKU.%2526OS%3DPN%2F6263354%2526RS%3DPN%2F6263354&amp;PageNum=&amp;Rtype=&amp;SectionNum=&amp;idkey=5518D5E8D713"><IMG 
alt=[Image] src="United States Patent 6,263,354.files/image.gif" border=0 
valign="middle"></A> 
<TABLE>
  <TBODY>
  <TR>
    <TD align=middle><A 
      href="http://ebiz1.uspto.gov/vision-service/ShoppingCart_P/ShowShoppingCart?backUrl1=http%3A//164.195.100.11/netacgi/nph-Parser?Sect1%3DPTO1%26Sect2%3DHITOFF%26d%3DPALL%26p%3D1%26u%3D%2Fnetahtml%2Fsrchnum.htm%26r%3D1%26f%3DG%26l%3D50%26s1%3D6263354.WKU.%26OS%3DPN%2F6263354&amp;backLabel1=Back%20to%20Document%3A%206,263,354"><IMG 
      alt="[View Shopping Cart]" 
      src="United States Patent 6,263,354.files/cart.gif" border=0 
      valign="middle"></A> <A 
      href="http://ebiz1.uspto.gov/vision-service/ShoppingCart_P/AddToShoppingCart?docNumber=6,263,354&amp;backUrl1=http%3A//164.195.100.11/netacgi/nph-Parser?Sect1%3DPTO1%26Sect2%3DHITOFF%26d%3DPALL%26p%3D1%26u%3D%2Fnetahtml%2Fsrchnum.htm%26r%3D1%26f%3DG%26l%3D50%26s1%3D6263354.WKU.%26OS%3DPN%2F6263354&amp;backLabel1=Back%20to%20Document%3A%206,263,354"><IMG 
      alt="[Add to Shopping Cart]" 
      src="United States Patent 6,263,354.files/order.gif" border=0 
      valign="middle"></A> </TD></TR>
  <TR>
    <TD align=middle><A 
      href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&amp;Sect2=HITOFF&amp;d=PALL&amp;p=1&amp;u=/netahtml/srchnum.htm&amp;r=1&amp;f=G&amp;l=50&amp;s1=6263354.WKU.&amp;OS=PN/6263354&amp;RS=PN/6263354#top"><IMG 
      alt=[Top] src="United States Patent 6,263,354.files/top.gif" border=0 
      valign="middle"></A> </TD></TR></TBODY></TABLE><A name=bottom></A><A 
href="http://www.uspto.gov/patft/index.html"><IMG alt=[Home] 
src="United States Patent 6,263,354.files/home.gif" border=0 
valign="middle"></A> <A 
href="http://patft.uspto.gov/netahtml/search-bool.html"><IMG 
alt="[Boolean Search]" src="United States Patent 6,263,354.files/boolean.gif" 
border=0 valign="middle"></A> <A 
href="http://patft.uspto.gov/netahtml/search-adv.htm"><IMG alt="[Manual Search]" 
src="United States Patent 6,263,354.files/manual.gif" border=0 
valign="middle"></A> <A href="http://patft.uspto.gov/netahtml/srchnum.htm"><IMG 
alt="[Number Search]" src="United States Patent 6,263,354.files/number.gif" 
border=0 valign="middle"></A> <A 
href="http://www.uspto.gov/patft/help/help.htm"><IMG alt=[Help] 
src="United States Patent 6,263,354.files/help.gif" border=0 
valign="middle"></A> </CENTER></BODY></HTML>
